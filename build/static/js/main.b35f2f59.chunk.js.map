{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","event","console","log","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","name","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","taskToAdd","Math","floor","random","length","filter","_task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b35f2f59.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nimport React from 'react'\n\nconst Button = ({ color, text, onClick }) => {\n\n    return (\n        <button onClick={onClick} style={{ backgroundColor: color}} className=\"btn\" >{text}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n    text: 'Add',\n    onClick: (event) => { console.log('default onClick - event:: ', event) }\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            <Button onClick={onAdd} color={showAdd ? 'red': 'green'} text={showAdd ? 'Close' : 'Add'} />\n        </header>\n    )\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'beige'\n// }\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes, FaBell } from 'react-icons/fa';\n    \nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder': ''}` } onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.reminder ? (<FaBell />) : null}\n                {task.text} <FaTimes onClick={() => onDelete(task.id)} style={{ color: 'red', cursor: 'Pointer' }} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    \n\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} onDelete={onDelete} onToggle={onToggle} task={task}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react';\n\nconst AddTask = ({ onAddTask }) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text) {\n            alert('Please add as task');\n            return;\n        }\n\n        onAddTask({ text, day, reminder });\n\n        setText('');\n        setDay('');\n        setReminder(false);\n    };\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label htmlFor=\"add-task\">Task</label>\n                <input type=\"text\" name=\"add-task\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"day-and-time\">Day & Time</label>\n                <input type=\"text\" name=\"day-and-time\" placeholder=\"Add Day & Time\"\n                value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label htmlFor=\"set-reminder\">Set Reminder</label>\n                <input type=\"checkbox\" name=\"set-reminder\"\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type=\"submit\" name=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from \"react\";\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      id: '1',\n      text: 'Work out',\n      day: '01/01/2001',\n      reminder: true\n    },\n    {\n      id: '2',\n      text: 'Water flowers',\n      day: '02/02/2001',\n      reminder: false\n    },\n    {\n      id: '3',\n      text: 'Read a book',\n      day: '03/01/2001',\n      reminder: true,\n    }\n  ]);\n\n  const deleteTask = (id) => {\n    console.log('deleteTask - id:: ', id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = (id) => {\n    console.log('toggleReminder - id::', id);\n    setTasks(tasks.map((_task) => _task.id === id ? {..._task, reminder: !_task.reminder} : _task ));\n  };\n\n  const addTask = (taskToAdd) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log({taskToAdd});\n    setTasks([...tasks, {id, ...taskToAdd}]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} title=\"Hello there\" showAdd={showAddTask}/>\n      {\n        showAddTask &&\n        <AddTask onAddTask={addTask} />\n      }\n      {\n        tasks.length > 0 ?\n          (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />)\n          : (<p>No Task to show</p>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}